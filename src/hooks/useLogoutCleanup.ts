import { useEffect } from 'react'
import { useSelector } from 'react-redux'
import { RootState } from '../store/store'

export function useLogoutCleanup() {
  const isAuthenticated = useSelector(
    (state: RootState) => state.user.isAuthenticated
  )
  const userId = useSelector((state: RootState) => state.user.id)

  useEffect(() => {
    console.log('üßπ useLogoutCleanup effect triggered:', {
      isAuthenticated,
      userId,
      timestamp: new Date().toISOString(),
    })

    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–ª–æ–≥–∏–Ω–∏–ª—Å—è, –æ—á–∏—â–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ –æ–± –æ–Ω–ª–∞–π–Ω —Å—Ç–∞—Ç—É—Å–µ
    if (!isAuthenticated && userId) {
      console.log('üßπ User logged out, cleaning up online status records')

      // –û—á–∏—â–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ –≤ localStorage —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –æ–Ω–ª–∞–π–Ω —Å—Ç–∞—Ç—É—Å–æ–º —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const keysToRemove: string[] = []

      for (let i = 0; i < localStorage.length; i++) {
        const key = localStorage.key(i)
        if (key && key.startsWith(`room_online_${userId}_`)) {
          keysToRemove.push(key)
        }
      }

      keysToRemove.forEach((key) => {
        localStorage.removeItem(key)
        console.log(`üóëÔ∏è Removed online status record: ${key}`)
      })
    }
  }, [isAuthenticated, userId])
}
